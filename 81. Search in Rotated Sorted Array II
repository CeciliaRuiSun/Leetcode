// Runtime: 0 ms, faster than 100.00%
// Memory Usage: 38.7 MB, less than 69.19%

class Solution {
    public boolean search(int[] nums, int target) {
        int left = 0, right = nums.length - 1;
        while(left <= right){
            int mid = left  + (right - left)/2;
            if(nums[mid] == target){
                return true;
            }
            
            if(nums[left] < nums[mid]){
                // left part is sorted
                if(target < nums[left] || target > nums[mid]){
                    // target in right/rotated part
                    left = mid + 1;
                } else{
                    right = mid - 1;
                }
                
            } else if(nums[left] > nums[mid]){
                // right part is sorted
                if(target < nums[mid] || target > nums[right]){
                    // target in left/rotated part
                    right = mid - 1;
                } else{
                    left = mid + 1;
                }
                
            } else{
                // since nums[mid] != target, nums[left] != target
                // we can only move left
                left ++;
            }
        }
        
        return false;
    }
}
