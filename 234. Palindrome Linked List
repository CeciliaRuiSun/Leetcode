/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    // Runtime: 13 ms, faster than 6.22%
    // Memory Usage: 53.1 MB, less than 5.69%
    
    public boolean isPalindrome(ListNode head) {
        StringBuilder s = new StringBuilder();
        while(head != null){
            s.append(head.val);
            head = head.next;
        }
        
        return helper(s.toString());
    }
    
    private boolean helper(String s){
        int i = 0;
        int j = s.length() - 1;
        while(i < j){
            if(s.charAt(i) != s.charAt(j)){
                return false;
            }
            i ++;
            j --;
        }
        return true;
    }
}
