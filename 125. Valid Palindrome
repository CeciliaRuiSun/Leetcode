// Runtime: 2 ms, faster than 98.45%
// Memory Usage: 38.8 MB, less than 89.08%

class Solution {
    public boolean isPalindrome(String s) {
        int low = 0;
        int high = s.length() - 1;
        
        while(low < high){
            char l = Character.toLowerCase(s.charAt(low));
            char h = Character.toLowerCase(s.charAt(high));
            
            if(!isValid(l)){
                low ++;
                continue;
            }
            
            if(!isValid(h)){
                high --;
                continue;
            }
            
            if(l != h){
                return false;
            }
            
            low ++;
            high --;
        }
        
        return true;
    }
    
    private boolean isValid(Character c){
        return (int) c >= 48 && (int) c <= 57 || ((int) c >= 97 && (int) c <= 122);
    }
    
}


//


class Solution {
    public boolean isPalindrome(String s) {
        StringBuilder sb = new StringBuilder();
        for(int i = 0; i < s.length(); i ++){
            char c = s.charAt(i);
            int asc = c - '0';
            if(asc >= 0 && asc <= 9 || (asc >= 49 && asc <= 74)){
                sb.append(c);
            } else if(asc >= 17 && asc <= 42){
                sb.append(Character.toLowerCase(c));
            } 
        }
        
        int left = 0, right = sb.length() - 1;
        while(left < right){
            if(sb.charAt(left) != sb.charAt(right)) return false;
            left ++;
            right --;
        }
        
        return true;
    }
    
    
}
