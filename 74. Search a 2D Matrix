// Runtime: 0 ms, faster than 100.00%
// Memory Usage: 38.3 MB, less than 91.21%
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int r = matrix.length, c = matrix[0].length;
        int top = 0, bottom = r - 1, left = 0, right = c -1;
        int row = 0;
        
        while(top <= bottom){
        // find out row first
            int mid = top + (bottom - top)/2;
            if(matrix[mid][0] <= target && matrix[mid][c - 1] >= target){
                row = mid;
                break;
            } else if(matrix[mid][0] < target){
                top = mid + 1;
            } else{
                bottom = mid - 1;
            }
        }
        
        while(left <= right){
            int mid = left + (right - left)/2;
            if(matrix[row][mid] == target){
                return true;
            } else if(matrix[row][mid] < target){
                left = mid + 1;
            } else{
                right = mid - 1;
            }
        }
        
        return false;
    }
}



//
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int row_lo = 0, row_hi = matrix.length - 1, col_lo = 0, col_hi = matrix[0].length - 1;
        while(row_lo <= row_hi){
            if(row_lo == row_hi){
                while(col_lo <= col_hi){
                    int mid = col_lo + (col_hi - col_lo)/2;
                    if(matrix[row_lo][mid] == target){
                        return true;
                    } else if(matrix[row_lo][mid] < target){
                        col_lo = mid + 1;
                    } else{
                        col_hi = mid - 1;
                    }
                }
            }
            
            int row_mid = row_lo + (row_hi - row_lo)/2;
            if(matrix[row_mid][0] > target){
                row_hi = row_mid - 1;
            } else if(matrix[row_mid][col_hi] < target){
                row_lo = row_mid + 1;
            } else{
                row_lo = row_mid;
                row_hi = row_mid;
            }
                      
        }
        
        return false;
    }
}
