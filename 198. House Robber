class Solution {
    public int rob(int[] nums) {
        int ifRobPrevious = 0;
        int ifNotRobPrevious = 0;
        
        for(int i = 0; i < nums.length; i++){
            int curRobbed = ifNotRobPrevious + nums[i];
            int curNotRobbed = Math.max(ifRobPrevious, ifNotRobPrevious);
            
            ifNotRobPrevious = curNotRobbed;
            ifRobPrevious = curRobbed;
        }
        
        return Math.max(ifRobPrevious, ifNotRobPrevious);
    }
}



//python solution
class Solution:
    def rob(self, nums: List[int]) -> int:
        def dp(i):
            if i == 0:
                return nums[0]
            if i == 1:
                return max(nums[0], nums[1])
        
            memo[i] = max(dp(i-1), dp(i-2)+nums[i])
            return memo[i]
        
        memo = {}
        // if we define memo as a list, be careful of out of index when i-2 < 0
        return dp(len(nums)-1)
