// Runtime: 14 ms, faster than 74.83% 
// Memory Usage: 39.3 MB, less than 90.95%

class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        List<List<Integer>> ret = new ArrayList<>();
        
        for(int i = 0; i < nums.length - 3; i ++){
            if(i > 0 && nums[i] == nums[i - 1]){
                continue;
            }
            
            for(int j = i + 1; j < nums.length - 2; j ++){
                if(j > i + 1 && nums[j] == nums[j - 1]){
                    continue;
                }
                
                int lo = j + 1;
                int hi = nums.length - 1;
                
                while(lo < hi){
                    if(nums[i] + nums[j] + nums[lo] + nums[hi] == target){
                        ret.add(Arrays.asList(nums[i], nums[j], nums[lo], nums[hi]));
                        while(lo + 1 < hi && nums[lo + 1] == nums[lo]){
                            lo ++;
                        }
                        while(hi - 1 > lo && nums[hi - 1] == nums[hi]){
                            hi --;
                        }
                        lo ++;
                        hi --;
                    } else if(nums[i] + nums[j] + nums[lo] + nums[hi] < target){
                        lo ++;
                    } else{
                        hi --;
                    }
                    
                }
            }
        }
        
        return ret;
    }
    
}
