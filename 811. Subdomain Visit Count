// Runtime: 34 ms, faster than 25.39% 
// Memory Usage: 47.1 MB, less than 21.54%

class Solution {
    public List<String> subdomainVisits(String[] cpdomains) {
        Map<String, Integer> map = new HashMap<>();
        
        for(String s: cpdomains){
            int space = s.indexOf(' ');
            int freq = Integer.parseInt(s.substring(0, space));
            String domain1 = s.substring(space + 1);
            map.put(domain1, map.getOrDefault(domain1, 0) + freq);
            
            int comma1 = domain1.indexOf('.');
            String domain2 = domain1.substring(comma1 + 1);
            map.put(domain2, map.getOrDefault(domain2, 0) + freq);
            
            int comma2 = domain2.indexOf('.');
            if(comma2 == -1){
                continue;
            } else{
                String domain3 = domain2.substring(comma2 + 1);
                map.put(domain3, map.getOrDefault(domain3, 0) + freq);
            }
            
        
        }
        
        List<String> ret = new ArrayList<>();
        for(String key: map.keySet()){
            ret.add(map.get(key) + " " + key);
        }
        
        return ret;
    }
}
