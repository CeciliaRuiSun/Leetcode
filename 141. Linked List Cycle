// Walker goes 1 step at a time,and runner goes 2 steps at a time.
// If we think walker is still,then runner goes 1 step at a time.
// So,the problem is just like a Chasing problem.
// There is a time when runner catches walker.

public class Solution {
    public boolean hasCycle(ListNode head) {
        ListNode walker = head;
        ListNode runner = head;
        
        while(runner != null && runner.next != null){
            walker = walker.next;
            runner = runner.next.next;
            
            if(walker == runner){
                return true;
            }
        }
        
        return false;
    }
}
