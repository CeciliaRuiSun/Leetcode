// Runtime: 0 ms, faster than 100.00%   O(N^2)
// Memory Usage: 39.9 MB, less than 57.43%    O(N)


class Solution {
    public int findCircleNum(int[][] isConnected) {
        int people = isConnected.length;
        int cnt = 0;
        boolean[] visited = new boolean[people];
                
        for(int i = 0; i < people; i ++){
            if(visited[i]) continue;
            dfs(isConnected, visited, i);
            cnt ++;
        }
        
        return cnt;
    }
    
    private void dfs(int[][] isConnected, boolean[] visited, int cur){
        //if(visited[cur]) return;
        visited[cur] = true;
        
        for(int i = 0; i < isConnected.length; i++){
            if(isConnected[cur][i] == 1 && !visited[i]){
                dfs(isConnected, visited, i);
            }
        }
    }
}
