// Runtime: 2 ms, faster than 99.39%
// Memory Usage: 38.7 MB, less than 93.50%

class Solution {
    public String multiply(String num1, String num2) {
        int n1 = num1.length(), n2 = num2.length();
        int[] product = new int[n1 + n2];
        
        for(int i = n1 - 1; i >= 0; i --){
            for(int j = n2 - 1; j >= 0; j --){
                int first = num1.charAt(i) - '0';
                int sec = num2.charAt(j) - '0';
                product[i + j +1] += first * sec;
            }
        }
        
        // update product
        int carry = 0;
        for(int i = product.length - 1; i >=0 ; i--){
            int temp = (product[i] + carry)%10;
            carry = (product[i] + carry)/10;
            product[i] = temp;
        }
        
        // copy product to string
        StringBuilder ret = new StringBuilder();
        for(int num: product){
            ret.append(num);
        }
        
        
        while(ret.length() != 0 && ret.charAt(0) == '0'){
            ret.deleteCharAt(0);
        }
        
        if(ret.length() == 0){
            return "0";
        }
        
        return ret.toString();
    }
}
