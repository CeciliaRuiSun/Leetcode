// 
// 

class Solution {
    public TreeNode insertIntoBST(TreeNode root, int val) {
        if(root == null){
            return new TreeNode(val);
        }
        
        if(root.val > val){
            root.left = insertIntoBST(root.left, val);
        } else{
            root.right = insertIntoBST(root.right, val);
        }
        
        return root;
    }
}


// solution 2

class Solution {
    public TreeNode insertIntoBST(TreeNode root, int val) {
        TreeNode temp = root;
        
        if(root == null){
            return new TreeNode(val);
        }
        
        while(true){
            if(temp.val > val){
                if(temp.left == null){
                    temp.left = new TreeNode(val);
                    break;
                }
                temp = temp.left;
            } else{
                if(temp.right == null){
                    temp.right = new TreeNode(val);
                    break;
                }
                temp = temp.right;
            }
            
        }
        
        return root;
    }
}
