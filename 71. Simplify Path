class Solution {
    public String simplifyPath(String path) {
        String[] dir = path.split("/");   //split path
        Deque<String> dq = new ArrayDeque<>();
        
        for(String s: dir){
            // add all valid elements to deque
            if(s.equals(".") || s.length() == 0){
                continue;
            } else if(s.equals("..")){
                if(!dq.isEmpty()){
                    dq.pollLast();
                }
            } else{
                dq.addLast(s);
            }
        }
        
        StringBuilder ret = new StringBuilder();
        while(!dq.isEmpty()){
            ret.append('/');
            ret.append(dq.pollFirst());
        }
        
        if(ret.length() == 0) return "/";
        
        return ret.toString();
    }
}





/*
  "/a/./b/../../c/"
*/

class Solution {
    public String simplifyPath(String path) {
        StringBuilder sb = new StringBuilder();
        int i = 0;
        while(i < path.length()){
            char c = path.charAt(i);
            if(i == 0){
                if(Character.isLetter(c)&& sb.length() == 0){
                    sb.append('/');
                    continue;
                } else if(Character.isLetter(c) || c == '/'){
                    sb.append(c);
                    i ++;
                    continue;
                } else{
                    sb.append('/');    // c == '.' or '_'
                    i ++;
                    continue; 
                }
            }
            
            if(Character.isLetter(c)){
                sb.append(c);
                
            }  else if(c == '.' || c == '_'){
                
            } else{                  // c = '/'
                if(sb.charAt(sb.length() - 1) == '/'){
                    
                } else{
                    sb.append(c);
                }
            }
            
            i ++;
        
        }
        
        int j = sb.length() - 1;
        while(j > 0 && sb.charAt(j) == '/'){
            sb.deleteCharAt(j);
            j --;
        }
        
        return sb.toString();
    }
}
