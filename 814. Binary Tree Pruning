// Beginning from the bottom, for null nodes we just return null. If the node is 1, or if there is any child of it is not null, we return itself, 
// otherwise we return null. In this way, only when a node has two null children, and itself is also 0, 
// we return null and the null will be assigned to its parentâ€™s left/right, so we pruned the tree.


class Solution {
    public TreeNode pruneTree(TreeNode root) {
        if(root == null){
            return null;
        }
        
        root.left = pruneTree(root.left);
        root.right = pruneTree(root.right);
        
        if(root.left == null && root.right == null && root.val == 0){
            return null;
        }
        
        
        return root;
    }
}
